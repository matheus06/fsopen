{"version":3,"sources":["service/person.js","app.js","index.js"],"names":["baseUrl","axios","get","newObject","post","id","delete","put","Notification","message","error","className","Persons","persons","filter","removePerson","personsToShow","person","name","toLowerCase","includes","map","key","number","handleClick","text","Filter","handleFilterChange","value","onChange","Button","onClick","PersonForm","onSubmit","newName","newNumber","handleNameChange","handleNumberChange","type","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setError","useEffect","console","log","personService","then","response","data","event","target","preventDefault","nameObject","p","indexOf","concat","setTimeout","catch","x","window","confirm","find","foundIndex","findIndex","copy","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a912891.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'https://secret-beach-29091.herokuapp.com/api/persons'\r\n\r\nconst getAll = () => {\r\n    return axios.get(baseUrl)\r\n}\r\n\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject)\r\n}\r\n\r\nconst remove = id => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject)\r\n}\r\n\r\nexport default { getAll, create, remove, update }","\nimport React, { useState, useEffect } from 'react'\nimport personService from './service/person'\n\nconst Notification = ({ message, error }) => {\n  if (message === null) {\n    return null\n  }\n\n  if (error) {\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nconst Persons = ({ persons, filter, removePerson }) => {\n  const personsToShow = persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  const rows = () => personsToShow.map((person) =>\n    <p key={person.id}> {person.name} {person.number}<Button handleClick={() => removePerson(person)} text=\"delete\" /></p>\n  )\n  return (\n    <div>\n      {rows()}\n    </div>\n  )\n}\n\nconst Filter = ({ filter, handleFilterChange }) => {\n\n  return (\n    <div>\n      filter shown with: <input value={filter} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick}>{text}</button>\n)\n\nconst PersonForm = ({ onSubmit, newName, newNumber, handleNameChange, handleNumberChange }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [filter, setFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    personService\n      .getAll().then(response => {\n        console.log('promise fulfilled')\n        setPersons(response.data)\n      })\n  }, [])\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const removePerson = (person) => {\n    if (window.confirm(\"Delete \" + person.name + \"?\")) {\n      debugger\n      personService\n        .remove(person.id).then(() => {\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n        .catch(error => {\n          setMessage(\n            `Information of ${newName} has already been removed from server`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setError(true)\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (persons.map(p => p.name).indexOf(newName) < 0) {\n\n      personService\n        .create(nameObject)\n        .then(response => {\n          setPersons(persons.concat(response.data))\n          setNewName('')\n          setNewNumber('')\n          setMessage(\n            `Added ${newName}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setError(false)\n        })\n        .catch(error => {\n          console.log(error)\n          debugger\n          setMessage(\n            error.response.data.error\n          )\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n          setError(true)\n          setPersons(persons.filter(x => x.name !== newName))\n        })\n\n    }\n    else {\n      if (window.confirm(newName + \" is already added to phonebook, replace the old number with a new one?\")) {\n        var person = persons.find(x => x.name === newName);\n        nameObject.id = person.id\n        personService\n          .update(person.id, nameObject)\n          .then(() => {\n            debugger\n            var foundIndex = persons.findIndex(x => x.name === newName);\n            const copy = [...persons]\n            copy[foundIndex] = nameObject\n            setPersons(copy)\n            setNewName('')\n            setNewNumber('')\n            setMessage(\n              `Updated ${newName}`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setError(false)\n          })\n          .catch(error => {\n            setMessage(\n              `Information of ${newName} has already been removed from server`\n            )\n            setTimeout(() => {\n              setMessage(null)\n            }, 5000)\n            setError(true)\n            setPersons(persons.filter(x => x.name !== newName))\n          })\n      }\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={message} error={error} />\n      <Filter filter={filter} handleFilterChange={handleFilterChange}></Filter>\n      <h2>Add a new</h2>\n      <PersonForm onSubmit={addPerson} newName={newName} newNumber={newNumber} handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}></PersonForm>\n      <h2>Numbers</h2>\n      <Persons persons={persons} filter={filter} removePerson={(person) => removePerson(person)}></Persons >\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\r\nimport React from 'react'\r\nimport './index.css'\r\n\r\nimport App from './app'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}